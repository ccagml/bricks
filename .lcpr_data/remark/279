{"data":[{"name":"2022-12-02 15:19:19","id":1669965559435,"body":"279耗时0:13:17\n没啥灵性,脑子不好使\nclass Solution\n{\npublic:\n    int numSquares(int n)\n    {\n        vector<int> all;\n        for (int i = 1; i < n; i++)\n        {\n            int a = i * i;\n            all.push_back(a);\n            if (a == n)\n            {\n                return 1;\n            }\n            if (a > n)\n            {\n                break;\n            }\n        }\n\n        // 凑够n的最小数量 // vi[x] 凑够x的最小次数\n        vector<int> vi(n + 1, 9999999);\n        vi[0] = 0;\n        vi[1] = 1;\n        for (int has : all)\n        {\n            for (int i = has; i <= n; i++)\n            {\n                vi[i] = min(vi[i], vi[i - has] + 1);\n            }\n        }\n\n        return vi[n];\n    }\n};"},{"name":"2022-12-13 10:21:34","id":1670898094151,"body":"279耗时0:7:38\n好像有点卡壳,没有秒解开\nclass Solution\n{\npublic:\n    int numSquares(int n)\n    {\n        vector<int> vi;\n        for (int i = 1; i < n; i++)\n        {\n            int temp = i * i;\n            if (temp > n)\n            {\n                break;\n            }\n            vi.push_back(temp);\n        }\n        vector<int> amount(n + 1, 999999);\n        amount[0] = 0;\n        amount[1] = 1;\n        for (int need = 1; need <= n; need++)\n        {\n            for (int j : vi)\n            {\n                if (j <= need)\n                {\n                    amount[need] = min(amount[need], amount[need - j] + 1);\n                }\n            }\n        }\n        return amount[n];\n    }\n};"}]}