{"data":[{"name":"2022-12-01 10:42:52","id":1669862572565,"body":"322耗时0:13:3\n好像有点慢\nclass Solution\n{\npublic:\n    int coinChange(vector<int> &coins, int amount)\n    {\n        // 凑成x最少个数?\n        vector<int> need(amount + 1, 9999999);\n        need[0] = 0;\n        for (int i = 1; i <= amount; i++)\n        {\n            for (int j = 0; j < coins.size(); j++)\n            {\n                int cur = coins[j];\n                if (cur > i)\n                {\n                    continue;\n                }\n                if (cur == i)\n                {\n                    need[i] = 1;\n                }\n                need[i] = min(need[i], need[i - cur] + 1);\n            }\n        }\n        return need[amount] == 9999999 ? -1 : need[amount];\n    }\n};"},{"name":"2022-12-01 10:54:15","id":1669863255318,"body":"解法2\nclass Solution\n{\npublic:\n    // 完全背包 外n内 正t, t >= n[i]\n    int coinChange(vector<int> &coins, int amount)\n    {\n        vector<long long> vll(amount + 1, 9999999);\n        vll[0] = 0;\n        for (int i = 0; i < coins.size(); i++)\n        {\n            for (int j = 0; j <= amount; j++)\n            {\n                if (coins[i] <= j)\n                {\n                    vll[j] = min(vll[j], vll[j - coins[i]] + 1);\n                }\n            }\n        }\n        return vll[amount] == 9999999 ? -1 : vll[amount];\n    }\n};"}]}