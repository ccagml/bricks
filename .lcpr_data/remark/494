{"data":[{"name":"2022-12-01 03:20:04","id":1669893604699,"body":"耗时 07:39\n就是统计数量\nclass Solution\n{\npublic:\n    int findTargetSumWays(vector<int> &nums, int target)\n    {\n        unordered_map<int, int> um;\n        um[nums[0]]++;\n        um[-nums[0]]++;\n        for (int i = 1; i < nums.size(); i++)\n        {\n            int next = nums[i];\n            unordered_map<int, int> um_new;\n            for (pair<int, int> ss : um)\n            {\n                int cur = ss.first;\n                int value = ss.second;\n                int aa = cur + next;\n                int bb = cur - next;\n\n                um_new[aa] += value;\n                um_new[bb] += value;\n            }\n            um = um_new;\n        }\n        return um[target];\n    }\n};"},{"name":"2022-12-01 03:40:51","id":1669894851222,"body":"20分钟 背包没调通\nclass Solution\n{\npublic:\n    int findTargetSumWays(vector<int> &nums, int target)\n    {\n        target = abs(target);\n        // 正的合 + 负的合 = 总数\n        // 正的合 - 负的合 = target\n        // 正的合 = (总数 + target) / 2\n        int sum = accumulate(nums.begin(), nums.end(), 0);\n        if ((sum + target) % 2 != 0 || sum < target)\n        {\n            return 0;\n        }\n        int need = (sum + target) / 2;\n        vector<int> vi(need + 1);\n        // std::cout << \"需要凑出:\" << need;\n        vi[0]++;\n        for (int i = 0; i < nums.size(); i++)\n        {\n            int num = nums[i];\n            for (int j = need; j >= num; j--)\n            {\n                vi[j] += vi[j - num];\n            }\n        }\n        return vi[need];\n    }\n};"},{"name":"2022-12-02 17:24:41","id":1669973081248,"body":"写了40分钟\nclass Solution\n{\npublic:\n    int findTargetSumWays(vector<int> &nums, int target)\n    {\n        target = abs(target);\n        int sum = 0;\n        for (int i = 0; i < nums.size(); i++)\n        {\n            sum += nums[i];\n        }\n        // 正 + 负 = sum\n        // 正 - 负 = target\n        // 正 = (sum + target) / 2\n        int need = (sum + target) / 2;\n        if (target > sum)\n        {\n            return 0;\n        }\n        if ((sum + target) % 2 == 1)\n        {\n            return 0;\n        }\n        vector<int> vi(need + 1);\n        // std::cout << \"sum:\" << sum << \":need:\" << need << std::endl;\n        vi[0] = 1;\n        for (int num : nums)\n        {\n            for (int j = need; j >= num; j--)\n            {\n                vi[j] += vi[j - num];\n            }\n        }\n        return vi[need];\n    }\n};"},{"name":"2022-12-05 14:29:15","id":1670221755934,"body":"// 挺快的\nclass Solution\n{\npublic:\n    int findTargetSumWays(vector<int> &nums, int target)\n    {\n        target = abs(target);\n        int sum = 0;\n        for (int num : nums)\n        {\n            sum += num;\n        }\n        // 正 + 负 = sum\n        // 正 - 负 = target\n        // 正 = (sum + target)/2\n        if (sum < target || (sum + target) % 2 == 1)\n        {\n            return 0;\n        }\n        int need = (sum + target) / 2;\n        vector<int> vb(need + 1);\n        vb[0] = 1;\n        for (int num : nums)\n        {\n            for (int j = need; j >= num; j--)\n            {\n                vb[j] += vb[j - num];\n            }\n        }\n        return vb[need];\n    }\n};"},{"name":"2022-12-13 13:41:31","id":1670910091173,"body":"好像一下就写好了\nclass Solution\n{\npublic:\n    int findTargetSumWays(vector<int> &nums, int target)\n    {\n        target = abs(target);\n        int sum = 0;\n        for (int j : nums)\n        {\n            sum += j;\n        }\n        if (target > sum)\n        {\n            return 0;\n        }\n\n        // 正 + 负 = sum\n        // 正 - 负 = target\n        // 2正 = sum + target\n        if ((sum + target) % 2 == 1)\n        {\n            return 0;\n        }\n        int need = (sum + target) / 2;\n        vector<int> vi(need + 1);\n        vi[0] = 1;\n        for (int j : nums)\n        {\n            for (int amount = need; amount >= j; amount--)\n            {\n                vi[amount] += (vi[amount - j]);\n            }\n        }\n        return vi[need];\n    }\n};"}]}