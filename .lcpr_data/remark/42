{"data":[{"name":"2022-12-01 00:23:55","id":1669883035709,"body":"42耗时0:14:21\n// 一开始的栈取最大值 条件反射错了\nclass Solution\n{\npublic:\n    int trap(vector<int> &height)\n    {\n        int n = height.size();\n        stack<int> sl;\n        stack<int> sr;\n        vector<int> vl(n, -1);\n        vector<int> vr(n, n);\n        // for (int i = 0; i < n; i++)\n        // {\n        //     while (sl.size() > 0 && height[sl.top()] < height[i])\n        //     {\n        //         sl.pop();\n        //     }\n        //     vl[i] = sl.size() > 0 ? sl.top() : i;\n        //     sl.push(i);\n        //     while (sr.size() > 0 && height[sr.top()] < height[i])\n        //     {\n        //         vr[sr.top()] = i;\n        //         sr.pop();\n        //     }\n        //     sr.push(i);\n        // }\n\n        // 统计左右最高的\n        for (int i = 0; i < n; i++)\n        {\n            if (sl.size() == 0 || sl.size() > 0 && height[i] >= height[sl.top()])\n            {\n                sl.push(i);\n            }\n            vl[i] = sl.top();\n        }\n\n        for (int i = n - 1; i >= 0; i--)\n        {\n            if (sr.size() == 0 || sr.size() > 0 && height[i] >= height[sr.top()])\n            {\n                sr.push(i);\n            }\n            vr[i] = sr.top();\n        }\n\n        int result = 0;\n        for (int i = 0; i < n; i++)\n        {\n            int cur = height[i];\n            int left = vl[i] >= 0 ? height[vl[i]] : 0;\n            int right = vr[i] < n ? height[vr[i]] : 0;\n            int add = max(0, min(left, right)) - cur;\n            if (add > 0)\n            {\n                // std::cout << i << \":add:\" << add << std::endl;\n                result += add;\n            }\n        }\n        return result;\n    }\n};"}]}